#!/usr/bin/env ruby 
require 'readline'
require 'lib/indextank_client'

@apiurl = nil
@idxname = nil
@api = nil
@index = nil
@data = {}



def command(line)
    args = line.split
    c = args[0]
    c
    case c
    when "url"
        @apiurl = args[1]
        @api = IndexTank::ApiClient.new @apiurl
        @data['api'] = @api
        printf "api url set to %s\n", @apiurl
    when "list"
        @api.list_indexes.each {|x| puts x.name}
    when "index"
        if !args[1]
            puts @idxname
        else
            @idxname = args[1]
            @index = @api.get_index @idxname
            @data['index'] = @index
            printf "index set to %s\n", @idxname
        end
    when "search"
        results = @index.search args[1]
        printf "%s results in %s seconds\n", results['matches'], results['search_time']
        results['results'].each {|doc|
            docid = doc['docid']
            printf "docid: #{docid}\n" 
        }
    when "help"
        printf "possible commands are:\n\nurl [url] sets the api url\nlist lists all indexes\nindex [index name] sets the index name \
        \nsearch [query] searches the current index\nquit exits this shell\n\n"

    else
        puts 'no such command, try "help"'
    end
end

if File.exists? '.console'
    @data = Marshal.load File.open('.console')
    @index = @data['index']
    @api = @data['api']
    @idxname = @index.name
end

while line = Readline.readline('> ', true) and line != 'quit'
    begin
        command line
        f = File.open '.console', 'w'
        Marshal.dump(@data, f)
        f.close
    rescue Exception => e
        puts e
    end
end

